{"version":3,"file":"static/js/4.f93685e5.chunk.js","mappings":"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","sources":["../node_modules/@chakra-ui/media-query/dist/index.esm.js","pages/AuthNavPage/AuthNavPage.jsx","../node_modules/@chakra-ui/button/dist/index.esm.js","../node_modules/@chakra-ui/react-use-merge-refs/dist/index.esm.js"],"sourcesContent":["// ../../../react-shim.js\nimport React from \"react\";\n\n// src/media-query.tsx\nimport { useTheme } from \"@chakra-ui/system\";\nvar getBreakpoint = (theme, value) => {\n  var _a;\n  return ((_a = theme == null ? void 0 : theme.breakpoints) == null ? void 0 : _a[value]) ?? value;\n};\nfunction useQuery(props) {\n  const { breakpoint = \"\", below, above } = props;\n  const theme = useTheme();\n  const bpBelow = getBreakpoint(theme, below);\n  const bpAbove = getBreakpoint(theme, above);\n  let query = breakpoint;\n  if (bpBelow) {\n    query = `(max-width: ${bpBelow})`;\n  } else if (bpAbove) {\n    query = `(min-width: ${bpAbove})`;\n  }\n  return query;\n}\n\n// src/use-media-query.ts\nimport { useEnvironment } from \"@chakra-ui/react-env\";\nimport { useEffect, useState } from \"react\";\nfunction useMediaQuery(query, options = {}) {\n  const { ssr = true, fallback } = options;\n  const env = useEnvironment();\n  const queries = Array.isArray(query) ? query : [query];\n  let fallbackValues = Array.isArray(fallback) ? fallback : [fallback];\n  fallbackValues = fallbackValues.filter((v) => v != null);\n  const [value, setValue] = useState(() => {\n    return queries.map((query2, index) => ({\n      media: query2,\n      matches: ssr ? !!fallbackValues[index] : env.window.matchMedia(query2).matches\n    }));\n  });\n  useEffect(() => {\n    setValue(queries.map((query2) => ({\n      media: query2,\n      matches: env.window.matchMedia(query2).matches\n    })));\n    const mql = queries.map((query2) => env.window.matchMedia(query2));\n    const handler = (evt) => {\n      setValue((prev) => {\n        return prev.slice().map((item) => {\n          if (item.media === evt.media)\n            return { ...item, matches: evt.matches };\n          return item;\n        });\n      });\n    };\n    mql.forEach((mql2) => {\n      if (typeof mql2.addListener === \"function\") {\n        mql2.addListener(handler);\n      } else {\n        mql2.addEventListener(\"change\", handler);\n      }\n    });\n    return () => {\n      mql.forEach((mql2) => {\n        if (typeof mql2.removeListener === \"function\") {\n          mql2.removeListener(handler);\n        } else {\n          mql2.removeEventListener(\"change\", handler);\n        }\n      });\n    };\n  }, [env.window]);\n  return value.map((item) => item.matches);\n}\n\n// src/media-query.hook.ts\nfunction usePrefersReducedMotion(options) {\n  const [prefersReducedMotion] = useMediaQuery(\"(prefers-reduced-motion: reduce)\", options);\n  return prefersReducedMotion;\n}\nfunction useColorModePreference(options) {\n  const [isLight, isDark] = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"], options);\n  if (isLight)\n    return \"light\";\n  if (isDark)\n    return \"dark\";\n  return void 0;\n}\n\n// src/use-breakpoint.ts\nimport { useTheme as useTheme2 } from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nfunction isObject(value) {\n  const type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !Array.isArray(value);\n}\n\n// src/use-breakpoint.ts\nfunction useBreakpoint(arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const theme = useTheme2();\n  const breakpoints = theme.__breakpoints.details.map(({ minMaxQuery, breakpoint }) => ({\n    breakpoint,\n    query: minMaxQuery.replace(\"@media screen and \", \"\")\n  }));\n  const fallback = breakpoints.map((bp) => bp.breakpoint === opts.fallback);\n  const values = useMediaQuery(breakpoints.map((bp) => bp.query), { fallback, ssr: opts.ssr });\n  const index = values.findIndex((value) => value == true);\n  return ((_a = breakpoints[index]) == null ? void 0 : _a.breakpoint) ?? opts.fallback;\n}\n\n// src/use-breakpoint-value.ts\nimport { useTheme as useTheme3 } from \"@chakra-ui/system\";\nimport { arrayToObjectNotation } from \"@chakra-ui/breakpoint-utils\";\n\n// src/media-query.utils.ts\nimport { breakpoints as defaultBreakPoints } from \"@chakra-ui/breakpoint-utils\";\nfunction getClosestValue(values, breakpoint, breakpoints = defaultBreakPoints) {\n  let index = Object.keys(values).indexOf(breakpoint);\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n  let stopIndex = breakpoints.indexOf(breakpoint);\n  while (stopIndex >= 0) {\n    const key = breakpoints[stopIndex];\n    if (values.hasOwnProperty(key)) {\n      index = stopIndex;\n      break;\n    }\n    stopIndex -= 1;\n  }\n  if (index !== -1) {\n    const key = breakpoints[index];\n    return values[key];\n  }\n  return void 0;\n}\n\n// src/use-breakpoint-value.ts\nfunction useBreakpointValue(values, arg) {\n  var _a;\n  const opts = isObject(arg) ? arg : { fallback: arg ?? \"base\" };\n  const breakpoint = useBreakpoint(opts);\n  const theme = useTheme3();\n  if (!breakpoint)\n    return;\n  const breakpoints = Array.from(((_a = theme.__breakpoints) == null ? void 0 : _a.keys) || []);\n  const obj = Array.isArray(values) ? Object.fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(([key, value]) => [key, value])) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\n// src/visibility.tsx\nfunction Visibility(props) {\n  const { breakpoint, hide, children, ssr } = props;\n  const [show] = useMediaQuery(breakpoint, { ssr });\n  const isVisible = hide ? !show : show;\n  const rendered = isVisible ? children : null;\n  return rendered;\n}\n\n// src/show.tsx\nfunction Show(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    ssr\n  }, children);\n}\nShow.displayName = \"Show\";\n\n// src/hide.tsx\nfunction Hide(props) {\n  const { children, ssr } = props;\n  const query = useQuery(props);\n  return /* @__PURE__ */ React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true,\n    ssr\n  }, children);\n}\nHide.displayName = \"Hide\";\nexport {\n  Hide,\n  Show,\n  useBreakpoint,\n  useBreakpointValue,\n  useColorModePreference,\n  useMediaQuery,\n  usePrefersReducedMotion,\n  useQuery\n};\n","import { NavLink } from 'react-router-dom';\n\nimport {\n  Stack,\n  Flex,\n  Button,\n  Text,\n  VStack,\n  useBreakpointValue,\n} from '@chakra-ui/react';\n\nimport Image from '../../image/dark-macbook.png';\n\nconst WithBackgroundImage = () => {\n  return (\n    <Flex\n      w={'full'}\n      h={'100vh'}\n      backgroundImage={`url(${Image})`}\n      backgroundSize={'cover'}\n      backgroundPosition={'center center'}\n    >\n      <VStack\n        w={'full'}\n        justify={'center'}\n        px={useBreakpointValue({ base: 4, md: 8 })}\n        bgGradient={'linear(to-r, blackAlpha.600, transparent)'}\n      >\n        <Stack maxW={'2xl'} align={'flex-start'} spacing={6}>\n          <Text\n            color={'white'}\n            fontWeight={700}\n            lineHeight={1.2}\n            fontSize={useBreakpointValue({ base: '3xl', md: '4xl' })}\n          >\n            Welcome to the phonebook to take advantage of all the features,\n            register or login.\n          </Text>\n          <Stack direction={'row'}>\n            <Button\n              as={NavLink}\n              to=\"register\"\n              bg={'blue.400'}\n              rounded={'full'}\n              color={'white'}\n              _hover={{ bg: 'blue.500' }}\n            >\n              Sing up\n            </Button>\n            <Button\n              as={NavLink}\n              to=\"login\"\n              bg={'whiteAlpha.300'}\n              rounded={'full'}\n              color={'white'}\n              _hover={{ bg: 'whiteAlpha.500' }}\n            >\n              Sign in\n            </Button>\n          </Stack>\n        </Stack>\n      </VStack>\n    </Flex>\n  );\n};\n\nexport default WithBackgroundImage;\n","// ../../../react-shim.js\nimport React from \"react\";\n\n// src/button.tsx\nimport { useMergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra as chakra3,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\n\n// ../../utilities/shared-utils/src/index.ts\nvar cx = (...classNames) => classNames.filter(Boolean).join(\" \");\nvar dataAttr = (condition) => condition ? \"\" : void 0;\n\n// src/button.tsx\nimport { useMemo as useMemo2 } from \"react\";\n\n// src/button-context.ts\nimport { createContext } from \"@chakra-ui/react-context\";\nvar [ButtonGroupProvider, useButtonGroup] = createContext({\n  strict: false,\n  name: \"ButtonGroupContext\"\n});\n\n// src/button-icon.tsx\nimport { chakra } from \"@chakra-ui/system\";\nimport { cloneElement, isValidElement } from \"react\";\nfunction ButtonIcon(props) {\n  const { children, className, ...rest } = props;\n  const _children = isValidElement(children) ? cloneElement(children, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : children;\n  const _className = cx(\"chakra-button__icon\", className);\n  return /* @__PURE__ */ React.createElement(chakra.span, {\n    display: \"inline-flex\",\n    alignSelf: \"center\",\n    flexShrink: 0,\n    ...rest,\n    className: _className\n  }, _children);\n}\nButtonIcon.displayName = \"ButtonIcon\";\n\n// src/button-spinner.tsx\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport { chakra as chakra2 } from \"@chakra-ui/system\";\nimport { useMemo } from \"react\";\nfunction ButtonSpinner(props) {\n  const {\n    label,\n    placement,\n    spacing = \"0.5rem\",\n    children = /* @__PURE__ */ React.createElement(Spinner, {\n      color: \"currentColor\",\n      width: \"1em\",\n      height: \"1em\"\n    }),\n    className,\n    __css,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__spinner\", className);\n  const marginProp = placement === \"start\" ? \"marginEnd\" : \"marginStart\";\n  const spinnerStyles = useMemo(() => ({\n    display: \"flex\",\n    alignItems: \"center\",\n    position: label ? \"relative\" : \"absolute\",\n    [marginProp]: label ? spacing : 0,\n    fontSize: \"1em\",\n    lineHeight: \"normal\",\n    ...__css\n  }), [__css, label, marginProp, spacing]);\n  return /* @__PURE__ */ React.createElement(chakra2.div, {\n    className: _className,\n    ...rest,\n    __css: spinnerStyles\n  }, children);\n}\nButtonSpinner.displayName = \"ButtonSpinner\";\n\n// src/use-button-type.tsx\nimport { useCallback, useState } from \"react\";\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\n// src/button.tsx\nvar Button = forwardRef((props, ref) => {\n  const group = useButtonGroup();\n  const styles = useStyleConfig(\"Button\", { ...group, ...props });\n  const {\n    isDisabled = group == null ? void 0 : group.isDisabled,\n    isLoading,\n    isActive,\n    children,\n    leftIcon,\n    rightIcon,\n    loadingText,\n    iconSpacing = \"0.5rem\",\n    type,\n    spinner,\n    spinnerPlacement = \"start\",\n    className,\n    as,\n    ...rest\n  } = omitThemingProps(props);\n  const buttonStyles = useMemo2(() => {\n    const _focus = { ...styles == null ? void 0 : styles[\"_focus\"], zIndex: 1 };\n    return {\n      display: \"inline-flex\",\n      appearance: \"none\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      userSelect: \"none\",\n      position: \"relative\",\n      whiteSpace: \"nowrap\",\n      verticalAlign: \"middle\",\n      outline: \"none\",\n      ...styles,\n      ...!!group && { _focus }\n    };\n  }, [styles, group]);\n  const { ref: _ref, type: defaultType } = useButtonType(as);\n  const contentProps = { rightIcon, leftIcon, iconSpacing, children };\n  return /* @__PURE__ */ React.createElement(chakra3.button, {\n    disabled: isDisabled || isLoading,\n    ref: useMergeRefs(ref, _ref),\n    as,\n    type: type ?? defaultType,\n    \"data-active\": dataAttr(isActive),\n    \"data-loading\": dataAttr(isLoading),\n    __css: buttonStyles,\n    className: cx(\"chakra-button\", className),\n    ...rest\n  }, isLoading && spinnerPlacement === \"start\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--start\",\n    label: loadingText,\n    placement: \"start\",\n    spacing: iconSpacing\n  }, spinner), isLoading ? loadingText || /* @__PURE__ */ React.createElement(chakra3.span, {\n    opacity: 0\n  }, /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  })) : /* @__PURE__ */ React.createElement(ButtonContent, {\n    ...contentProps\n  }), isLoading && spinnerPlacement === \"end\" && /* @__PURE__ */ React.createElement(ButtonSpinner, {\n    className: \"chakra-button__spinner--end\",\n    label: loadingText,\n    placement: \"end\",\n    spacing: iconSpacing\n  }, spinner));\n});\nButton.displayName = \"Button\";\nfunction ButtonContent(props) {\n  const { leftIcon, rightIcon, children, iconSpacing } = props;\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, leftIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginEnd: iconSpacing\n  }, leftIcon), children, rightIcon && /* @__PURE__ */ React.createElement(ButtonIcon, {\n    marginStart: iconSpacing\n  }, rightIcon));\n}\n\n// src/button-group.tsx\nimport {\n  chakra as chakra4,\n  forwardRef as forwardRef2\n} from \"@chakra-ui/system\";\nimport { useMemo as useMemo3 } from \"react\";\nvar ButtonGroup = forwardRef2(function ButtonGroup2(props, ref) {\n  const {\n    size,\n    colorScheme,\n    variant,\n    className,\n    spacing = \"0.5rem\",\n    isAttached,\n    isDisabled,\n    ...rest\n  } = props;\n  const _className = cx(\"chakra-button__group\", className);\n  const context = useMemo3(() => ({ size, colorScheme, variant, isDisabled }), [size, colorScheme, variant, isDisabled]);\n  let groupStyles = {\n    display: \"inline-flex\"\n  };\n  if (isAttached) {\n    groupStyles = {\n      ...groupStyles,\n      \"> *:first-of-type:not(:last-of-type)\": { borderEndRadius: 0 },\n      \"> *:not(:first-of-type):not(:last-of-type)\": { borderRadius: 0 },\n      \"> *:not(:first-of-type):last-of-type\": { borderStartRadius: 0 }\n    };\n  } else {\n    groupStyles = {\n      ...groupStyles,\n      \"& > *:not(style) ~ *:not(style)\": { marginStart: spacing }\n    };\n  }\n  return /* @__PURE__ */ React.createElement(ButtonGroupProvider, {\n    value: context\n  }, /* @__PURE__ */ React.createElement(chakra4.div, {\n    ref,\n    role: \"group\",\n    __css: groupStyles,\n    className: _className,\n    \"data-attached\": isAttached ? \"\" : void 0,\n    ...rest\n  }));\n});\nButtonGroup.displayName = \"ButtonGroup\";\n\n// src/icon-button.tsx\nimport { forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nimport { cloneElement as cloneElement2, isValidElement as isValidElement2 } from \"react\";\nvar IconButton = forwardRef3((props, ref) => {\n  const { icon, children, isRound, \"aria-label\": ariaLabel, ...rest } = props;\n  const element = icon || children;\n  const _children = isValidElement2(element) ? cloneElement2(element, {\n    \"aria-hidden\": true,\n    focusable: false\n  }) : null;\n  return /* @__PURE__ */ React.createElement(Button, {\n    padding: \"0\",\n    borderRadius: isRound ? \"full\" : void 0,\n    ref,\n    \"aria-label\": ariaLabel,\n    ...rest\n  }, _children);\n});\nIconButton.displayName = \"IconButton\";\nexport {\n  Button,\n  ButtonGroup,\n  ButtonSpinner,\n  IconButton,\n  useButtonGroup\n};\n","// src/index.ts\nimport { useMemo } from \"react\";\nfunction assignRef(ref, value) {\n  if (ref == null)\n    return;\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n  try {\n    ref.current = value;\n  } catch (error) {\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\nfunction mergeRefs(...refs) {\n  return (node) => {\n    refs.forEach((ref) => {\n      assignRef(ref, node);\n    });\n  };\n}\nfunction useMergeRefs(...refs) {\n  return useMemo(() => mergeRefs(...refs), refs);\n}\nexport {\n  assignRef,\n  mergeRefs,\n  useMergeRefs\n};\n"],"names":["useMediaQuery","query","options","ssr","fallback","env","useEnvironment","queries","Array","isArray","fallbackValues","filter","v","useState","map","query2","index","media","matches","window","matchMedia","value","setValue","useEffect","mql","handler","evt","prev","slice","item","forEach","mql2","addListener","addEventListener","removeListener","removeEventListener","isObject","type","useBreakpointValue","values","arg","_a","breakpoint","opts","breakpoints","useTheme2","__breakpoints","details","minMaxQuery","replace","bp","findIndex","useBreakpoint","theme","useTheme3","from","keys","defaultBreakPoints","Object","indexOf","stopIndex","key","hasOwnProperty","getClosestValue","fromEntries","entries","arrayToObjectNotation","w","h","backgroundImage","Image","backgroundSize","backgroundPosition","justify","px","base","md","bgGradient","maxW","align","spacing","color","fontWeight","lineHeight","fontSize","direction","as","NavLink","to","bg","rounded","_hover","cx","classNames","Boolean","join","dataAttr","condition","createContext","strict","name","ButtonGroupProvider","useButtonGroup","ButtonIcon","props","children","className","rest","_children","isValidElement","cloneElement","focusable","_className","React","chakra","display","alignSelf","flexShrink","ButtonSpinner","label","placement","Spinner","width","height","__css","marginProp","spinnerStyles","useMemo","alignItems","position","chakra2","displayName","Button","forwardRef","ref","group","styles","useStyleConfig","omitThemingProps","isDisabled","isLoading","isActive","leftIcon","rightIcon","loadingText","iconSpacing","spinner","spinnerPlacement","buttonStyles","useMemo2","_focus","zIndex","appearance","justifyContent","userSelect","whiteSpace","verticalAlign","outline","isButton","setIsButton","useCallback","node","tagName","useButtonType","_ref","defaultType","contentProps","chakra3","disabled","useMergeRefs","opacity","ButtonContent","marginEnd","marginStart","forwardRef2","size","colorScheme","variant","isAttached","context","useMemo3","groupStyles","borderEndRadius","borderRadius","borderStartRadius","chakra4","role","forwardRef3","icon","isRound","ariaLabel","element","isValidElement2","cloneElement2","padding","assignRef","current","error","Error","mergeRefs","refs"],"sourceRoot":""}